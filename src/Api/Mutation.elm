-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module Api.Mutation exposing (MutateOptionalArguments, mutate, selection)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.Union
import Graphqelm.Field as Field exposing (Field)
import Graphqelm.Internal.Builder.Argument as Argument exposing (Argument)
import Graphqelm.Internal.Builder.Object as Object
import Graphqelm.Internal.Encode as Encode exposing (Value)
import Graphqelm.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphqelm.OptionalArgument exposing (OptionalArgument(Absent))
import Graphqelm.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


{-| Select fields to build up a top-level mutation. The request can be sent with
functions from `Graphqelm.Http`.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) RootMutation
selection constructor =
    Object.selection constructor


type alias MutateOptionalArguments =
    { id : OptionalArgument Api.Scalar.Id }


{-|

  - id -

-}
mutate : (MutateOptionalArguments -> MutateOptionalArguments) -> Field (Maybe Int) RootMutation
mutate fillInOptionals =
    let
        filledInOptionals =
            fillInOptionals { id = Absent }

        optionalArgs =
            [ Argument.optional "id" filledInOptionals.id (\(Api.Scalar.Id raw) -> Encode.string raw) ]
                |> List.filterMap identity
    in
    Object.fieldDecoder "mutate" optionalArgs (Decode.int |> Decode.nullable)
